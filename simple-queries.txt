    //BUILD QUERY

    //1) FILTERING
    //console.log(req.query)
    //const queryObj = { ...req.query };
    //const excludedFields = ['page', 'sort', 'limit', 'fields'];
    //excludedFields.forEach((el) => delete queryObj[el]);

    ////2) ADVANCE FILERING
    //let queryStr = JSON.stringify(queryObj);
    //queryStr = queryStr.replace(/\b(gte|gt|lte|lt)\b/g, (match) => `$${match}`);

    //let query = Tour.find(JSON.parse(queryStr));

    //2) SORTING
    //if (req.query.sort) {
    //  const sortBy = req.query.sort.split(',').join(' ');
    //  query = query.sort(sortBy);
    //} else {
    //  query = query.sort('-createdAt');
    //}

    //3) FIELD LIMITING
    //if (req.query.fields) {
    //  const fields = req.query.fields.split(',').join(' ');
    //  query = query.select(fields);
    //} else {
    //  query = query.select('-__v');
    //}

    //4) PAGINATION
    //const page = req.query.page * 1 || 1;
    //const limit = req.query.limit * 1 || 100;
    //const skip = (page - 1) * limit;
    ////page=2&limit=10 , 1-10 are page 1 & 11-20 are page 2
    //query = query.skip(skip).limit(limit);

    ////IF PAGE IS MORE THAN THE DATA WE HAVE IN DATEBASE
    //if (req.query.page) {
    //  const numTours = await Tour.countDocuments();
    //  if (skip > numTours) throw new Error('This page does not exist');
    //}
